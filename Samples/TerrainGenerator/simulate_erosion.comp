#version 460
#include "descriptors.glh"

layout (local_size_x = 16, local_size_y = 16) in;

layout (set = BindlessStorageImageSet, binding = 0, r32f) uniform readonly image2D HeightMapIn[];
layout (set = BindlessStorageImageSet, binding = 0, r32f) uniform writeonly image2D HeightMapOut[];

layout (push_constant) uniform PushConstants {
	float fTimeElapsedMicros;
	uint Phase;
	uint HeightMapInIdx;
	uint HeightMapOutIdx;
};

const uint SP_Initialize	= 0u;
const uint SP_Erode			= 1u;

#define PI 3.14159265358979323846

float random (in vec2 st) {
    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);
}

void main()
{
	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	vec2 p = vec2(uv) / 512.f;

	// vec4 height = vec4(fbm(p * (3.0 + 10.0 * Phase)));
    float height = sin(p + fTimeElapsedMicros * 0.000001).x * 0.5 + 0.5;

	imageStore(HeightMapOut[HeightMapOutIdx], uv, vec4(height));
}